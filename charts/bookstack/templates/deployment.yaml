apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bookstack.fullname" . }}
  labels:
    {{- include "bookstack.labels" . | nindent 4 }}
spec:
  replicas: 1
  {{- with .Values.updateStrategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "bookstack.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bookstack.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "bookstack.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
        {{- range $key, $val := .Values.config }}
          - name: {{ $key | upper }}
            value: {{ $val | quote }}
        {{- end }}
        {{- range $key, $val := .Values.extraEnv }}
          - name: {{ $key | upper }}
            value: {{ $val | quote }}
        {{- end }}
        {{- if .Values.existingSecret }}
          envFrom:
          - secretRef:
              name: {{ .Values.existingSecret }}
        {{- end }}
          ports:
            - name: "{{ .Values.service.name }}"
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: "{{ .Values.service.name }}"
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: "{{ .Values.service.name }}"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
  {{- if .Values.persistence.existingClaim }}
        - name: config
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim  }}
  {{- else if .Values.persistence.enabled }}
        - name: config
          persistentVolumeClaim:
            claimName: {{ include "bookstack.fullname" . }}
  {{- else }}
        - name: config
          emptyDir: {}
  {{- end }}