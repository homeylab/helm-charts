# Default values for nut-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker.io
  name: druggeri/nut_exporter
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

## set image for post install helm tests
testCurlImage:
  repository: docker.io
  name: busybox
  tag: "1.36.1"
  pullPolicy: IfNotPresent
  # the url for post install check test
  path: /ups_metrics

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

## `port` is also used as `web.listenaddress` for exporter
service:
  type: ClusterIP
  port: 9199
  name: metrics
  protocol: TCP

metrics:
  ## -- Enable and configure a Prometheus serviceMonitor for the chart under this key.
  enabled: true
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /ups_metrics
    prometheus.io/port: "9199"
  ## if serviceMonitor enabled, pod annotations above will be ignored
  serviceMonitor:
    enabled: false
    path: /ups_metrics
    interval: 30s
    scrapeTimeout: 10s
    additionalLabels: {}
    targetLabels: []
    # ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#endpoint
    relabelings: []
    metricRelabelings: []
  ## Enable and configure Prometheus Rules for the chart under this key.
  prometheusRule:
    enabled: false
    labels: {}
    ## -- Configure additionial rules for the chart under this key.
    rules: []
      # - alert: UpsStatusUnknown
      #   annotations:
      #     description: UPS {{ "{{ $labels.ups }}" }} is reporting a status of unknown.
      #     summary: UPS status unknown.
      #   expr: |
      #     nut_status == 0
      #   for: 10s
      #   labels:
      #     severity: critical

## Optionally place credentials:
# NUT_EXPORTER_USERNAME
# NUT_EXPORTER_PASSWORD
## in secret instead and specify secret below
existingSecret: ""

## Ref: https://github.com/DRuggeri/nut_exporter#usage
## Note: Anything used in `settings.config` will be used as env vars.
## - all keys will be upper cased and values quoted (for safety)
## - this can be used to set additional configuration for exporter
## - example env var {NUT_EXPORTER_STATUSES}: `nut_exporter_statuses: "sample, test"`
settings:
  config:
    nut_exporter_server: ""
    nut_exporter_serverport: 3493
  # ignored if `existingSecret specified`
  auth:
    nut_exporter_username: ""
    nut_exporter_password: ""

## Provide extra flags as args to the exporter
## ref: https://github.com/DRuggeri/nut_exporter#usage
## for flags with no value, only provide key, example: `version: `
## note: `--web.config.file` has its own section below and should not be included here
extraRunFlags: {}
  # log.level: debug
  # log.format: json

## Specify any additional env vars here
extraEnv: {}

## ref: https://github.com/prometheus/exporter-toolkit/blob/master/docs/web-configuration.md
## optionally specify a web_config file that will be used
## use inline block as shown below in commented section
## If specified, an `extraRunFlags` will be added automatically as `--web.config.file`
webconfig_file: ""
# webconfig_file: |
#   [tls_server_config]
#   # Certificate for server to use to authenticate to client.
#   # Expected to be passed as a PEM encoded sequence of bytes as a string.
#   #
#   # NOTE: If passing the cert inline, cert_file should not be specified below.
#   [ cert: <string> ]

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
