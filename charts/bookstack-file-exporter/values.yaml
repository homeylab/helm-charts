# Default values for bookstack-file-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: docker.io
  name: homeylab/bookstack-file-exporter
  pullPolicy: IfNotPresent
  # You can optionally specify your preferred image tag here.
  # For OS updates but consistent Bookstack version, use `version-X.X.X` tag
  # for other variants refer: https://www.linuxserver.io/blog/docker-tags-so-many-tags-so-little-time#manifests
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  fsGroup: 33333

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- use an existing secret for credentials
existingSecret: ""
# -- set extra environment variables
extraEnv: {}

config:
  # -- set the bookstack instance URL
  host: "http://bookstack.bookstack.svc.cluster.local"
  credentials:
    # -- set token id, ignored if `BOOKSTACK_TOKEN_ID` is defined via secret or env variable
    tokenId: ""
    # -- set token secret, ignored if `BOOKSTACK_TOKEN_SECRET` is defined via secret or env variable
    tokenSecret: ""
  # -- set any additional headers for http client
  additionalHeaders:
    User-Agent: "bookstack-file-exporter"
  # -- set one or more export formats
  formats:
    - markdown
    # - html
    # - pdf
    # - plaintext
  minio:
    enabled: false
    # set minio 
    host: "minio.yourdomain.com"
    # -- set minio access key, ignored if `MINIO_ACCESS_KEY` is defined via secret or env variable
    accessKey: ""
    # -- set minio secret key, ignored if `MINIO_SECRET_KEY` is defined via secret or env variable
    secretKey: ""
    # -- set region
    region: "us-east-1"
    # -- set bucket
    bucket: "bookstack-bkps"
    # -- set minio path to use
    path: "bookstack/file_backups/"
    # -- how many backups to keep
    keepLast: 5
  assets:
    # -- set to export images
    exportImages: true
    # -- set to export attachments
    exportAttachments: true
    # -- set to modify asset links for markdown files
    modifyMarkdown: false
    # -- set to export page metadata
    exportMeta: false
    # -- set to enable SSL verification for all asset requests
    verifySSL: true
  # -- how many backups to keep on filesystem
  keepLast: 1
  # -- If `runInterval` is > `0`, the exporter will run as a deployment and wait specified seconds between runs.
  # -- setting to `0` uses CronJob resource instead of a deployment
  runInterval: 0


cron:
  # -- if `runInterval == 0` CronJob settings will be applied
  # -- set a valid cron schedule
  schedule: "@daily"
  # -- set a valid timezone if preferred
  timeZone: ""
  # -- set the concurrency policy
  concurrencyPolicy: Forbid
  # -- set restart policy
  restartPolicy: OnFailure

persistence:
  # -- enable persistence using PVC for backup files if using `runMode: application`
  enabled: false
  # -- set additional annotations for the PVC
  annotations: {}
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # -- set the storage class to use, example: `nfs-provisioner`
  storageClass: ""
  # -- set the size of the volume
  size: 5Gi
  # -- set an existingClaim for volume, if set the rest of persistence parameters are ignored
  existingClaim: ""
  accessModes:
    - ReadWriteOnce
  # probably will not have to change below
  # -- set the mount path for the volume inside the container
  mountPath: "/export/dump"
  # Selector to match an existing Persistent Volume
  selector: {}

## for deployment
updateStrategy: 
  type: Recreate

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

# -- set additional volumes
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- set additional volumeMounts
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
