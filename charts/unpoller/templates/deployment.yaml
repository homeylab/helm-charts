apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "unpoller.fullname" . }}
  labels:
    {{- include "unpoller.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- with .Values.updateStrategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "unpoller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- if not .Values.metrics.serviceMonitor.enabled }}
      {{- with .Values.metrics.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
      labels:
        {{- include "unpoller.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- range $key, $val := .Values.settings.unifi.config }}
          - name: "UP_UNIFI_CONTROLLER_0_{{ $key | upper }}"
            value: {{ $val | quote }}
          {{- end }}
        {{- if .Values.settings.influxdb.enabled }}
          {{- range $key, $val := .Values.settings.influxdb.config }}
          - name: "UP_INFLUXDB_{{ $key | upper }}"
            value: {{ $val | quote }}
          {{- end }}
        {{- else }}
          - name: "UP_INFLUXDB_DISABLE"
            value: "true"
        {{- end }}
          {{- range $key, $val := .Values.settings.prometheus }}
          - name: "UP_PROMETHEUS_{{ $key | upper }}"
            value: {{ $val | quote }}
          {{- end }}
          {{- range $key, $val := .Values.settings.unpoller }}
          - name: "UP_POLLER_{{ $key | upper }}"
            value: {{ $val | quote }}
          {{- end }}
        {{- if not .Values.existingSecret }}
          {{- range $key, $val := .Values.settings.unifi.auth }}
          - name: "UP_UNIFI_CONTROLLER_0_{{ $key | upper }}"
            value: {{ $val | quote }}
          {{- end }}
          {{- if .Values.settings.influxdb.enabled }}
          {{- range $key, $val := .Values.settings.influxdb.auth }}
          - name: "UP_INFLUXDB_{{ $key | upper }}"
            value: {{ $val | quote }}
          {{- end }}
          {{- end }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- range $key, $val := .Values.extraEnv }}
          - name: {{ $key | upper }}
            value: {{ $val | quote }}
          {{- end }}
        {{- end }}
        {{- if .Values.existingSecret }}
          envFrom:
          - secretRef:
              name: {{ .Values.existingSecret }}
        {{- end }}
          ports:
            - name: {{ .Values.service.name }}
              containerPort: {{ .Values.service.port }}
              protocol: {{ .Values.service.protocol }}
        {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
        {{- end }}
        {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
        {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
